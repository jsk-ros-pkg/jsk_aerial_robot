<?xml version="1.0"?>
<launch>
  ###########  launch config  ###########
  <arg name="rm" default="True"/>
  <arg name="sim" default="False"/>
  <arg name="real_machine" default="$(arg rm)"/>
  <arg name="simulation" default="$(arg sim)"/>
  <arg name="full_vectoring_mode"  default= "false" />
  <arg name="type" default="octo"/>
  <arg name="onboards_model" default="v1_default"/>
  <arg name="estimate_mode" default="0"/>
  <arg name="sim_estimate_mode" default="2"/>
  <arg name="headless" default="True"/>
  <arg name="worldtype" default="$(find aerial_robot_simulation)/gazebo_model/world/empty.world"/>
  <arg name="launch_gazebo" default="True"/>
  <arg name="direct_model" default="False"/>
  <arg name="direct_model_name"/>
  <arg name="spawn_x" default="0.0"/>
  <arg name="spawn_y" default="0.0"/>
  <arg name="spawn_z" default="0.4"/>
  <arg name="spawn_yaw" default="0.0"/>
  <arg name="robot_id" default=""/>
  <arg name="robot_ns" value="tiger$(arg robot_id)"/>
  <arg name="config_dir" default="$(find tiger)/config/$(arg type)"/>

  ###########  Parameters  ###########
  <group ns="$(arg robot_ns)">

    ###########  Basic Param  ###########
    # EGOMOTION_ESTIMATE = 0
    # EXPERIMENT_ESTIMATE = 1. for unstable mocap, use this mode
    # GROUND_TRUTH = 2
    <param name="estimation/mode" value= "$(arg sim_estimate_mode)" if="$(arg simulation)"/>
    <param name="estimation/mode" value= "$(arg estimate_mode)" if="$(arg real_machine)"/>

    ###########  UAV Config  ###########
    <param name="uav_model" value= "32" /> <!-- TODO temp: dragon control -->
    <rosparam file="$(arg config_dir)/model/FullVectoringRobotModel.yaml" command="load" if="$(arg full_vectoring_mode)" />
    <rosparam file="$(arg config_dir)/model/HydrusLikeRobotModel.yaml" command="load" unless="$(arg full_vectoring_mode)" />


    ###########  Motor Config  ###########
    <rosparam file="$(arg config_dir)/MotorInfo.yaml" command="load"/>

    ########### Servo Config ###########
    <rosparam file="$(arg config_dir)/Servo.yaml" command="load"/>

    ###########  Battery Config  ###########
    <rosparam file="$(arg config_dir)/Battery.yaml" command="load"/>

    ###########  Control  ###########
    <rosparam file="$(arg config_dir)/control/FullVectoringControlConfig.yaml" command="load" if="$(arg full_vectoring_mode)"/>
    <param name = "controller/rotor_interfere_compensate" value = "false" if = "$(eval not arg('real_machine') and arg('simulation'))" /> <!-- ignore rotor interfer compensate in simulation mode -->
    <rosparam file="$(arg config_dir)/control/LQIGimbalControlConfig.yaml" command="load" unless="$(arg full_vectoring_mode)"/>

    ###########  Sensor Fusion  ###########
    <rosparam file="$(arg config_dir)/StateEstimation.yaml" command="load"/>
    <rosparam file="$(arg config_dir)/Simulation.yaml" command="load" if="$(arg simulation)"/>

    ###########  Navigation  ###########
    <rosparam file="$(arg config_dir)/NavigationConfig.yaml" command="load"/>
  </group>

  ###########  Base Platform  ###########
  <node pkg="aerial_robot_base" type="aerial_robot_base_node" name="aerial_robot_base_node" ns="$(arg robot_ns)" output="screen">
    <param name="tf_prefix" value="$(arg robot_ns)"/>
    <param name="param_verbose" value="false"/>
    <param name="main_rate" value="40"/>
  </node>

  ###########  Robot Model  ###########
  <arg name="description_mode" value="urdf" unless="$(arg simulation)"/>
  <arg name="description_mode" value="gazebo" if="$(arg simulation)"/>
  <include file="$(find aerial_robot_model)/launch/aerial_robot_model.launch">
    <arg name="headless" value="$(arg headless)"/>
    <arg name="robot_model" value="$(find tiger)/robots/$(arg type)/$(arg onboards_model)/robot.$(arg description_mode).xacro" unless="$(arg direct_model)"/>
    <arg name="robot_model" value="$(arg direct_model_name)" if="$(arg direct_model)"/>
    <arg name="robot_ns" value="$(arg robot_ns)"/>
    <arg name="rviz_config" value="$(find tiger)/config/rviz_config"/>
    <arg name="rviz_init_pose" value="$(arg config_dir)/RvizInit.yaml"/>
    <arg name="need_joint_state" value="false" if ="$(eval arg('simulation') + arg('real_machine') > 0)"/>

  </include>

  ###########  Sensors  ###########
  <include file="$(find tiger)/launch/includes/$(arg onboards_model)/sensors.launch.xml">
    <arg name="real_machine" value="$(arg real_machine)"/>
    <arg name="simulation" value="$(arg simulation)"/>
    <arg name="robot_ns" value="$(arg robot_ns)"/>
  </include >

  ###########  Servo Bridge  ###########
  <node pkg="aerial_robot_model" type="servo_bridge_node" name="servo_bridge" output="screen" ns="$(arg robot_ns)" />

  ########## Simulation in Gazebo #########
  <include file="$(find aerial_robot_simulation)/launch/simulation.launch" if = "$(eval arg('simulation') * (1 - arg('real_machine')))">
    <arg name="robot_ns" value="$(arg robot_ns)"/>
    <arg name="gui" value="false" if="$(arg headless)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="launch_gazebo" default="$(arg launch_gazebo)"/>
    <arg name="worldtype" value="$(arg worldtype)"/>
    <arg name="spawn_x" value="$(arg spawn_x)"/>
    <arg name="spawn_y" value="$(arg spawn_y)"/>
    <arg name="spawn_z" value="$(arg spawn_z)"/>
    <arg name="spawn_yaw" value="$(arg spawn_yaw)"/>
  </include>

</launch>
