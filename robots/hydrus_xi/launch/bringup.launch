<?xml version="1.0"?>
<launch>
  ###########  launch config  ###########
  <arg name="real_machine" default="True" />
  <arg name="simulation" default="False" />
  <arg name="control_mode" default="0" />
  <arg name="config_dir" default="$(find hydrus_xi)/config"/>
  <arg name="type" default="hex_branch" />
  <arg name="onboards_model" default="xavier201811" />
  <arg name="init_gimbal_angle" default="true" />
  <arg name="estimate_mode"  default= "0" />
  <arg name="sim_estimate_mode"  default= "2" />
  <arg name="headless" default="True" />
  <arg name="worldtype" default="$(find aerial_robot_simulation)/gazebo_model/world/empty.world" />
  <arg name="direct_model" default="False" />
  <arg name="direct_model_name" />
  <arg name="sensor_config_file" default="$(find hydrus_xi)/config/$(arg type)/egomotion_estimation/$(arg onboards_model).yaml"/>
  <arg name="sensor_launch_file" default="$(find hydrus_xi)/launch/includes/$(arg onboards_model)/sensors.launch.xml"/>
  <arg name="launch_gazebo" default="True" />
  <arg name="spawn_x" default="0.0"/>
  <arg name="spawn_y" default="0.0"/>
  <arg name="spawn_z" default="0.0"/>
  <arg name="spawn_yaw" default="0.0"/>
  <arg name="robot_id" default="" />
  <arg name="robot_ns" value="hydrus_xi$(arg robot_id)" />
  <arg name="mujoco" default="False" />
  <arg name="demo" default="True" />


  ###########  Parameters  ###########
  <group ns="$(arg robot_ns)">
    # EGOMOTION_ESTIMATE = 0
    # EXPERIMENT_ESTIMATE = 1. for unstable mocap, use this mode
    # GROUND_TRUTH = 2
    <param name="estimation/mode" value= "$(arg sim_estimate_mode)" if="$(arg simulation)" />
    <param name="estimation/mode" value= "$(arg estimate_mode)" if="$(arg real_machine)"/>

    ###########  Robot Model  ###########
    <rosparam file="$(arg config_dir)/$(arg type)/RobotModel.yaml" command="load" />

    ###########  Motor Config  ###########
    <rosparam file="$(find hydrus_xi)/config/motor_info/MN4010KV475_Afro_15inch.yaml" command="load" />

    ###########  Battery Config  ###########
    <rosparam file="$(arg config_dir)/$(arg type)/Battery.yaml" command="load" />

    ########### Servo Config ###########
    <rosparam file="$(arg config_dir)/$(arg type)/Servo.yaml" command="load" />

    ###########  Sensor Fusion  ###########
    <rosparam file="$(arg sensor_config_file)" command="load" />
    <rosparam file="$(arg config_dir)/$(arg type)/Simulation.yaml" command="load" if="$(arg simulation)"/>

    ###########  Flight Control  ###########
    <rosparam file="$(arg config_dir)/$(arg type)/FlightControl.yaml" command="load" />

    ###########  Navigation ###############
    <rosparam file="$(arg config_dir)/$(arg type)/NavigationConfig.yaml" command="load" />
  </group>

  ###########  Base Platform  ###########
  <node pkg="aerial_robot_base" type="aerial_robot_base_node" name="aerial_robot_base_node" ns="$(arg robot_ns)" output="screen" >
    <param name="tf_prefix" value="$(arg robot_ns)"/>
    <param name="param_verbose" value="false"/>
    <param name="main_rate" value="40"/>
  </node>

  ###########  Robot Model  ###########
  <arg name="description_mode" value="urdf" unless="$(arg simulation)" />
  <arg name="description_mode" value="gazebo" if="$(arg simulation)" />
  <include file="$(find aerial_robot_model)/launch/aerial_robot_model.launch" >
    <arg name="headless" value="$(arg headless)" />
    <arg name="robot_model" value="$(find hydrus_xi)/robots/$(arg type)/$(arg onboards_model).$(arg description_mode).xacro" unless="$(arg direct_model)"/>
    <arg name="robot_model" value="$(arg direct_model_name)" if="$(arg direct_model)"/>
    <arg name="robot_ns" value="$(arg robot_ns)" />
    <arg name="rviz_config" value="$(arg config_dir)/rviz_config" />
    <arg name="rviz_init_pose" value="$(arg config_dir)/$(arg type)/RvizInit.yaml" />
    <arg name="need_joint_state" value="false" if ="$(eval arg('simulation') + arg('real_machine') > 0)"/>
  </include >

  ###########  Sensors  ###########
  <include file="$(arg sensor_launch_file)" >
    <arg name="real_machine" value="$(arg real_machine)" />
    <arg name="simulation" value="$(arg simulation)" />
    <arg name="robot_ns" value="$(arg robot_ns)" />
  </include >

  ###########  Servo Bridge  ###########
  <node pkg="aerial_robot_model" type="servo_bridge_node" name="servo_bridge" output="screen" ns="$(arg robot_ns)">
    <param name="use_mujoco" value="true" if="$(arg mujoco)"/>
  </node>

  ########## Simulation in Gazebo #########
  <include file="$(find aerial_robot_simulation)/launch/gazebo.launch" if = "$(eval arg('simulation') and not arg('real_machine') and not arg('mujoco'))" >
    <arg name="robot_ns" default="$(arg robot_ns)" />
    <arg name="launch_gazebo" default="$(arg launch_gazebo)" />
    <arg name="gui" value="false" if="$(arg headless)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="worldtype" value="$(arg worldtype)"/>
    <arg name="spawn_x" value="$(arg spawn_x)"/>
    <arg name="spawn_y" value="$(arg spawn_y)"/>
    <arg name="spawn_z" value="$(arg spawn_z)"/>
    <arg name="spawn_yaw" value="$(arg spawn_yaw)"/>
  </include>

  ######### init gimbal angles #########
  <node pkg="hydrus_xi" name="init_gimbal_angles" type="init_gimbal_angles.py" ns="$(arg robot_ns)" if="$(arg init_gimbal_angle)"/>

  ########## Simulation in Mujoco #########
  <include file="$(find aerial_robot_simulation)/launch/mujoco.launch" if="$(eval arg('simulation') and not arg('real_machine') and arg('mujoco'))" >
    <arg name="robot_ns" value="$(arg robot_ns)" />
    <arg name="headless" value="$(arg headless)"/>
    <arg name="mujoco_model" value="$(find hydrus_xi)/mujoco/$(arg type)/$(arg onboards_model)/robot.xml"/>
  </include>

  ########## Simple Demo #########
  <node pkg="aerial_robot_base" type="simple_demo.py" name="simple_demo" ns="$(arg robot_ns)" output="screen" if="$(arg demo)"/>

</launch>
