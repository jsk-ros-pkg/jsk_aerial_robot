name: Build STM32 Project
on : [push, pull_request, workflow_dispatch]

# on:
#   pull_request:
#     branches:
#       - main
#   push:
#     branches:
#       - main

#   # enable manual triggering
#   workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sugihara-16/docker_test/stm32cubeide_1.8.0_build_env:2024-11-03

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # submodules too
          submodules: recursive

      - name: Install ROS packages with rosdep
        run: |
          source /opt/ros/$ROS_DISTRO/setup.bash
          sudo rosdep init
          rosdep update
          mkdir -p ~/catkin_ws/src
          ln -s $GITHUB_WORKSPACE ~/catkin_ws/src/jsk_aerial_robot
          cd ~/catkin_ws
          rosdep install --from-paths src --ignore-src -r -s  # do a dry-run first
          rosdep install --from-paths src --ignore-src -r -y
      - name: Build ROS Package
        run: |
          source /opt/ros/$ROS_DISTRO/setup.bash
          cd ~/catkin_ws
          catkin build --no-status spinal
          source devel/setup.bash
      - name: Build project
        run: |
          /opt/st/stm32cubeide_1.8.0/stm32cubeide -nosplash \
            -application org.eclipse.cdt.managedbuilder.core.headlessbuild \
            -data ~/STM32CubeIDE/workspace_1.8.0/ \
            -import aerial_robot_nerve/spinal/mcu_project/boards/stm32H7/STM32CubeIDE/ \
            -cleanBuild spinal/Debug \
            -vmargs -Dorg.eclipse.cdt.core.build.parallel=true \
            -Dorg.eclipse.cdt.core.build.parallel.threads=12

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spinal.artifacts
          # The output artifacts are spinal.elf, spinal.map, etc.
          # Use a wildcard pattern to get them all
          path: STM32CubeIDE/Debug/spinal.*
